# Minimal NGINX reverse proxy to terminate HTTPS and forward to backend
# This is a template processed at build time. Do NOT mount at runtime.

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Proxy settings (global defaults)
    proxy_connect_timeout       10s;
    proxy_send_timeout          60s;
    proxy_read_timeout          60s;
    proxy_http_version          1.1;
    proxy_set_header            Connection "";

    server {
        listen 0.0.0.0:443 ssl;
        server_name $REDIR_HOSTNAME;

        ssl_certificate     /etc/nginx/certs/server.crt.pem;
        ssl_certificate_key /etc/nginx/certs/server.key.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            # Support either $REDIR_IP or the misspelled $REDITR_IP in the template
            proxy_pass https://$REDIR_IP;   # fallback replaced if $REDITR_IP is present
            # proxy_pass https://$REDITR_IP;  # optional legacy placeholder
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;              # pass SNI to backend if using https
            proxy_ssl_verify off;                  # turn on if you want to verify backend cert
        }
    }
}
